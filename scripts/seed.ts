import { drizzle } from "drizzle-orm/mysql2";
import { booths, students } from "../drizzle/schema";

async function seed() {
  if (!process.env.DATABASE_URL) {
    console.error("DATABASE_URL is not set");
    process.exit(1);
  }

  const db = drizzle(process.env.DATABASE_URL);

  console.log("üå± Seeding database...");

  try {
    // Th√™m booths
    console.log("üì¶ Adding booths...");
    const boothsData = [
      {
        name: "Booth C√¥ng ngh·ªá th√¥ng tin",
        description: "Gi·ªõi thi·ªáu v·ªÅ ng√†nh CNTT v√† c√°c d·ª± √°n sinh vi√™n",
        location: "Khu A - T·∫ßng 1",
        isActive: 1,
      },
      {
        name: "Booth Kinh t·∫ø",
        description: "T∆∞ v·∫•n ngh·ªÅ nghi·ªáp v√† c∆° h·ªôi vi·ªác l√†m",
        location: "Khu A - T·∫ßng 2",
        isActive: 1,
      },
      {
        name: "Booth Ngo·∫°i ng·ªØ",
        description: "Tr·∫£i nghi·ªám h·ªçc t·∫≠p ƒëa vƒÉn h√≥a",
        location: "Khu B - T·∫ßng 1",
        isActive: 1,
      },
      {
        name: "Booth Thi·∫øt k·∫ø ƒë·ªì h·ªça",
        description: "Tri·ªÉn l√£m c√°c t√°c ph·∫©m thi·∫øt k·∫ø",
        location: "Khu B - T·∫ßng 2",
        isActive: 1,
      },
      {
        name: "Booth Marketing",
        description: "Workshop v·ªÅ marketing s·ªë",
        location: "Khu C - T·∫ßng 1",
        isActive: 1,
      },
    ];

    for (const booth of boothsData) {
      await db.insert(booths).values(booth);
      console.log(`‚úÖ Added booth: ${booth.name}`);
    }

    // Th√™m students
    console.log("\nüë®‚Äçüéì Adding students...");
    const studentsData = [
      {
        studentId: "SV001",
        name: "Nguy·ªÖn VƒÉn An",
        email: "an.nguyen@university.edu",
        phone: "0901234567",
        major: "C√¥ng ngh·ªá th√¥ng tin",
        year: 3,
        qrCode: "SV001",
      },
      {
        studentId: "SV002",
        name: "Tr·∫ßn Th·ªã B√¨nh",
        email: "binh.tran@university.edu",
        phone: "0902234567",
        major: "Kinh t·∫ø",
        year: 2,
        qrCode: "SV002",
      },
      {
        studentId: "SV003",
        name: "L√™ Ho√†ng C∆∞·ªùng",
        email: "cuong.le@university.edu",
        phone: "0903234567",
        major: "C√¥ng ngh·ªá th√¥ng tin",
        year: 4,
        qrCode: "SV003",
      },
      {
        studentId: "SV004",
        name: "Ph·∫°m Th·ªã Dung",
        email: "dung.pham@university.edu",
        phone: "0904234567",
        major: "Ngo·∫°i ng·ªØ",
        year: 1,
        qrCode: "SV004",
      },
      {
        studentId: "SV005",
        name: "Ho√†ng VƒÉn Em",
        email: "em.hoang@university.edu",
        phone: "0905234567",
        major: "Thi·∫øt k·∫ø ƒë·ªì h·ªça",
        year: 2,
        qrCode: "SV005",
      },
      {
        studentId: "SV006",
        name: "V√µ Th·ªã Ph∆∞∆°ng",
        email: "phuong.vo@university.edu",
        phone: "0906234567",
        major: "Marketing",
        year: 3,
        qrCode: "SV006",
      },
      {
        studentId: "SV007",
        name: "ƒê·∫∑ng VƒÉn Giang",
        email: "giang.dang@university.edu",
        phone: "0907234567",
        major: "C√¥ng ngh·ªá th√¥ng tin",
        year: 2,
        qrCode: "SV007",
      },
      {
        studentId: "SV008",
        name: "B√πi Th·ªã H√†",
        email: "ha.bui@university.edu",
        phone: "0908234567",
        major: "Kinh t·∫ø",
        year: 4,
        qrCode: "SV008",
      },
      {
        studentId: "SV009",
        name: "Ng√¥ VƒÉn H√πng",
        email: "hung.ngo@university.edu",
        phone: "0909234567",
        major: "Ngo·∫°i ng·ªØ",
        year: 3,
        qrCode: "SV009",
      },
      {
        studentId: "SV010",
        name: "L√Ω Th·ªã Lan",
        email: "lan.ly@university.edu",
        phone: "0910234567",
        major: "Thi·∫øt k·∫ø ƒë·ªì h·ªça",
        year: 1,
        qrCode: "SV010",
      },
    ];

    for (const student of studentsData) {
      await db.insert(students).values(student);
      console.log(`‚úÖ Added student: ${student.name} (${student.studentId})`);
    }

    console.log("\n‚ú® Seeding completed successfully!");
    console.log("\nüìä Summary:");
    console.log(`   - Booths: ${boothsData.length}`);
    console.log(`   - Students: ${studentsData.length}`);
    console.log("\nüí° Tips:");
    console.log("   - ƒê·ªÉ test qu√©t QR, s·ª≠ d·ª•ng m√£ sinh vi√™n (VD: SV001, SV002, ...)");
    console.log("   - B·∫°n c√≥ th·ªÉ t·∫°o QR code t·ª´ c√°c m√£ n√†y t·∫°i: https://www.qr-code-generator.com/");
    console.log("   - Ho·∫∑c s·ª≠ d·ª•ng c√¥ng c·ª• t·∫°o QR code online kh√°c");
    
    process.exit(0);
  } catch (error) {
    console.error("‚ùå Error seeding database:", error);
    process.exit(1);
  }
}

seed();

